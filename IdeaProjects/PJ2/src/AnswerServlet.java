/* * To change this license header, choose License Headers in Project Properties. * To change this template file, choose Tools | Templates * and open the template in the editor. */import java.io.FileOutputStream;import java.io.IOException;import java.io.PrintWriter;import java.nio.file.Paths;import java.sql.Connection;import java.util.Date;import java.sql.PreparedStatement;import java.sql.ResultSet;import java.sql.Statement;import java.util.UUID;import javax.servlet.ServletException;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import net.sf.json.JSONObject;import sun.misc.BASE64Decoder;public class AnswerServlet extends HttpServlet {    /**     * Processes requests for both HTTP <code>GET</code> and <code>POST</code>     * methods.     *     * @param request servlet request     * @param response servlet response     * @throws ServletException if a servlet-specific error occurs     * @throws IOException if an I/O error occurs     */    protected void processRequest(HttpServletRequest request, HttpServletResponse response)            throws ServletException, IOException {        response.setContentType("text/html;charset=utf-8");        response.setHeader("Access-Control-Allow-Origin", "*");        try (PrintWriter out = response.getWriter()) {            /* TODO output your page here. You may use following sample code. */            String qid = request.getParameter("qid");            String uid = request.getParameter("uid");            String content = request.getParameter("content");            System.out.println("AnswerContentInServlet="+content);            String image = request.getParameter("image");            String imageID = "-1";            if (!image.equals("-1")) {                String header_jpeg = "data:image/jpeg;base64,";                String header_png = "data:image/png;base64,";                if (image.indexOf(header_jpeg) == 0) {                    image = image.substring(header_jpeg.length());                } else if (image.indexOf(header_png) == 0) {                    image = image.substring(header_png.length());                }                BASE64Decoder decoder = new BASE64Decoder();                byte[] decodedBytes = decoder.decodeBuffer(image);                imageID = UUID.randomUUID().toString();                String imgFilePath =Paths.get(this.getServletConfig().getServletContext().getRealPath("/image/"),imageID).toString();                FileOutputStream fos = new FileOutputStream(imgFilePath);                fos.write(decodedBytes);                fos.close();            }            Connection conn = SQLHelper.getConnetion();            PreparedStatement ps = conn.prepareStatement("INSERT INTO `note`.`answer_t` "                    + "(`aid`, `qid`, `uid`, `text`, `image`, `time`) "                    + "VALUES (NULL, ?, ?, ?, ?, CURRENT_TIMESTAMP);", Statement.RETURN_GENERATED_KEYS);            ps.setString(1, qid);            ps.setString(2, uid);            ps.setString(3, content);            ps.setString(4, imageID);            ps.executeUpdate();            ResultSet rs = ps.getGeneratedKeys();            rs.next();            int generated_id = rs.getInt(1);            ResultSet rs_tmp = conn.createStatement().executeQuery("SELECT * FROM `question_t` WHERE `qid`=" + qid);            rs_tmp.next();            String aids = rs_tmp.getString("aids");            aids = generated_id + " " + aids;            conn.createStatement().execute("UPDATE `note`.`question_t` SET `aids` = '" + aids + "' WHERE `question_t`.`qid` = " + qid);            JSONObject ret = new JSONObject();            ret.put("status", "true");            out.println(ret);            conn.close();        } catch (Exception e) {            System.err.println(e);            PrintWriter out = response.getWriter();            JSONObject ret = new JSONObject();            ret.put("status", "false");            out.println(ret);            out.close();        }    }    // <editor-fold defaultstate="collapsed" desc="HttpServlet methods. Click on the + sign on the left to edit the code.">    /**     * Handles the HTTP <code>GET</code> method.     *     * @param request servlet request     * @param response servlet response     * @throws ServletException if a servlet-specific error occurs     * @throws IOException if an I/O error occurs     */    @Override    protected void doGet(HttpServletRequest request, HttpServletResponse response)            throws ServletException, IOException {        processRequest(request, response);    }    /**     * Handles the HTTP <code>POST</code> method.     *     * @param request servlet request     * @param response servlet response     * @throws ServletException if a servlet-specific error occurs     * @throws IOException if an I/O error occurs     */    @Override    protected void doPost(HttpServletRequest request, HttpServletResponse response)            throws ServletException, IOException {        processRequest(request, response);    }    /**     * Returns a short description of the servlet.     *     * @return a String containing servlet description     */    @Override    public String getServletInfo() {        return "Short description";    }// </editor-fold>}